{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap 3bea705f08cfcc66d355","webpack:///external \"express\"","webpack:///external \"config\"","webpack:///external \"lodash\"","webpack:///./src/models/user.js","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"joi\"","webpack:///external \"bcrypt\"","webpack:///./src/middleware/auth.js","webpack:///./src/middleware/logging.js","webpack:///external \"@babel/polyfill\"","webpack:///./src/app.js","webpack:///external \"express-async-errors\"","webpack:///./src/startup/routes.js","webpack:///./src/routes/home.js","webpack:///./src/routes/auth.js","webpack:///./src/routes/users.js","webpack:///./src/routes/skills.js","webpack:///external \"https\"","webpack:///external \"axios\"","webpack:///external \"winston\"","webpack:///external \"winston-mongodb\"","webpack:///./src/middleware/error.js","webpack:///./src/startup/db.js","webpack:///./src/startup/config.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3bea705f08cfcc66d355","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"config\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"config\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 2\n// module chunks = 0","const config = require('config');\nconst jwt = require('jsonwebtoken');\nconst mongoose = require('mongoose');\nconst Joi = require('joi');\nconst bcrypt = require('bcrypt');\n\nconst secret = process.env.JWT_PRIVATE_KEY || config.get('JWT_PRIVATE_KEY');\n\nconst userSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        minlength: 5,\n        maxlength: 50,\n        required: true,\n    },\n    email: {\n        type: String,\n        required: true,\n        minlength: 5,\n        maxlength: 255,\n        unique: true\n    },\n    password: {\n        type: String,\n        required: true,\n        minlength: 5,\n        maxlength: 1024,\n        unique: true\n    },\n    isAdmin: Boolean,\n});\nuserSchema.methods.generateAuthToken = function () {\n    return jwt.sign(\n        {\n            id: this._id,\n            isAdmin: this.isAdmin,\n        }, // payload. Could be anything what we need store and pass via token\n        secret\n    );\n};\n\nconst User = mongoose.model('Users', userSchema);\n\nconst validateUser = (user) => {\n    const schema = {\n        name: Joi.string().min(5).max(50).required(),\n        email: Joi.string().min(5).max(255).required().email(),\n        password: Joi.string().min(5).max(255).required() //joi-password-complexity\n    };\n    return Joi.validate(user, schema);\n};\n\nconst hash = async (password) => {\n    const salt = await bcrypt.genSalt(10);\n    return await bcrypt.hash(password, salt);\n};\n\nexports.hash = hash;\nexports.User = User;\nexports.validate = validateUser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"joi\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"joi\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 7\n// module chunks = 0","const config = require('config');\nconst jwt = require('jsonwebtoken');\n\nconst secret = process.env.JWT_PRIVATE_KEY || config.get('JWT_PRIVATE_KEY');\n\nmodule.exports = (req, res, next) => {\n    const token = req.header('x-auth-token');\n    if (!token) return res.status(401).send('Access denied. No token provided');\n    try {\n        // if its valid it will be decoded and return payload\n        req.user = jwt.verify(token, secret);\n        next();\n    }catch (e) {\n        return res.status(400).send('Invalid token');\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/middleware/auth.js","const winston = require('winston');\nrequire('winston-mongodb');\nconst config = require('config');\n\nconst url = process.env.MONGO_LOGGING || config.get('MONGO_LOGGING');\n\nmodule.exports = winston.createLogger({\n        // error\n        // warn\n        // info\n        // verbose\n        // debug\n        // silly\n        format: winston.format.combine(\n            winston.format.timestamp(),\n            // winston.format.colorize(),\n            // winston.format.prettyPrint(),\n            winston.format.json()\n        ),\n        transports: [\n            new winston.transports.Console(),\n            // new winston.transports.File({filename: 'logfile.log'}),\n            // new winston.transports.File({filename: 'error.log', level: 'error'}),\n            // new winston.transports.MongoDB({db: 'mongodb://localhost:6666/LoggingDb', level: 'error'}),\n            new winston.transports.MongoDB({\n                db: url,\n                collection: 'log'})\n        ],\n        exceptionHandlers: [\n            new winston.transports.Console(),\n            new winston.transports.File({filename: 'exceptions.log'}),\n            // new winston.transports.MongoDB({db: 'mongodb://localhost:7777/UsersDb'})\n        ]\n    }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware/logging.js","module.exports = require(\"@babel/polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/polyfill\"\n// module id = 11\n// module chunks = 0","import 'express-async-errors';\nimport * as express from 'express';\nconst app = express();\nrequire('./startup/routes')(app);\nrequire('./startup/db')();\nrequire('./startup/config')();\n\nprocess.on('unhandledRejection', (ex) => {\n    throw ex;\n});\n\nconst port = process.env.PORT || 2222;\nconst host = process.env.HOST || 'http://localhost';\napp.listen(port, () => console.log(`Listening: ${host}:${port}`));\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","module.exports = require(\"express-async-errors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-async-errors\"\n// module id = 13\n// module chunks = 0","const express = require('express');\nconst home = require('../routes/home');\nconst auth = require('../routes/auth');\nconst users = require('../routes/users');\nconst skills = require('../routes/skills');\nconst error = require('../middleware/error');\n\nmodule.exports = function (app) {\n    app.use(express.json());\n    app.use(function(req, res, next) {\n        res.header(\"Access-Control-Allow-Origin\", \"*\");\n        res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        next();\n    });\n    app.use('/', home);\n    app.use('/api/auth', auth);\n    app.use('/api/users', users);\n    app.use('/api/skills', skills);\n    app.use(error); // must be after all routes and middleware(s)\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/startup/routes.js","const express = require('express');\nrouter = express.Router();\n\nrouter.get('/', (req, res) => {\n    return res.send('Hello World!');\n});\n\nmodule.exports = router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/home.js","const _ = require('lodash');\nconst express = require('express');\nconst router = express.Router();\nconst {User} = require('../models/user');\nconst Joi = require('joi');\nconst bcrypt = require('bcrypt');\n\nrouter.post('/', async (req, res) => {\n    const {error} = validate(req.body);\n    if (error) return res.status(400).send(error.details.slice().shift().message);\n\n    let user = await User.findOne({email: req.body.email});\n    if (!user) return res.status(400).send('Invalid email or password!');\n\n    const validPassword = await bcrypt.compare(req.body.password, user.password);\n    if (!validPassword) return res.status(400).send('Invalid email or password.');\n\n    const token = user.generateAuthToken();\n    return res.header('x-auth-token', token).send(_.pick(user, ['_id','name', 'email']));\n});\n\nconst validate = async (req) => {\n    const schema = {\n        email: Joi.string().min(5).max(255).required().email(),\n        password: Joi.string().min(5).max(255).required() //joi-password-complexity\n    };\n    return Joi.validate(req, schema);\n};\n\nmodule.exports = router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/auth.js","const _ = require('lodash');\nconst {User, validate, hash} = require('../models/user');\nconst express = require('express');\nconst router = express.Router();\nconst auth = require('../middleware/auth');\n\nrouter.get('/me', auth, async (req, res) => {\n    const user = await User.findById(req.user.id)\n        .select({password: false})\n    // .select('-password')\n        ;\n    res.send(user);\n});\n\nrouter.post('/', async (req, res) => {\n    const {error} = validate(req.body);\n    if (error) return res.status(400).send(error.details.slice().shift().message);\n    let user = await User.findOne({email: req.body.email});\n    if (user) return res.status(400).send('User already registered');\n    user = new User(_.pick(req.body, ['name', 'email', 'password']));\n    user.password = await hash(req.body.password);\n    await user.save();\n    const token = user.generateAuthToken();\n    return res.header('x-auth-token', token).send(_.pick(user, ['_id', 'name', 'email']));\n});\n\nmodule.exports = router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/users.js","const express = require('express');\nconst router = express.Router();\nconst https = require('https');\nconst axios = require('axios');\nconst config = require('config');\nconst auth = require('../middleware/auth');\nconst logger = require('../middleware/logging');\n\nconst api = process.env.API_SKILLS || config.get('API_SKILLS');\n\nrouter.get('/', async (req, res) => {\n    const headers = req.headers;\n    logger.log({level: 'info', message: \"Processing request: \", meta: headers});\n    const agent = new https.Agent({rejectUnauthorized: false});\n    const result = await axios.get(api, {httpsAgent: agent});\n    if (result && result.data && result.data.skills) {\n        logger.log({\n            level: 'info',\n            message: `WOW: Getting results from microservice:`,\n            meta: JSON.stringify(result.data)\n        });\n        return res.send(result.data);\n    }\n    logger.error({\n        level: 'error',\n        message: `something went wrong...`,\n    });\n    res.statusMessage = \"Else: Content not found\";\n    res.status(401);\n    res.send(\"Else: Content not found\");\n});\n\nrouter.post('/', auth, async (req, res) => {\n    const agent = new https.Agent({rejectUnauthorized: false});\n    const result = await axios.get(api, {httpsAgent: agent});\n    return res.send(result.data);\n});\n\nmodule.exports = router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/skills.js","module.exports = require(\"https\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"https\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"winston-mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston-mongodb\"\n// module id = 22\n// module chunks = 0","module.exports = function (err, req, res, next) { // must be after all routes and middleware(s)\n    // error\n    // warn\n    // info\n    // verbose\n    // debug\n    // silly\n\n    console.log({\n        level: 'error',\n        message: err.message,\n        meta: err\n    });\n\n    return res.status(500) // internal server error\n        .send('Something failed');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/middleware/error.js","const logger = require('../middleware/logging');\nconst mongoose = require('mongoose');\nconst config = require('config');\n\nconst url = process.env.MONGO_USERS || config.get('MONGO_USERS');\n\nmodule.exports = function () {\n    mongoose.connect(url, {useNewUrlParser: true})\n        .then(() => {logger.log({level: 'info', message: 'Mongo db Connected'});\n    });\n    mongoose.set('debug', true);\n    mongoose.set('useCreateIndex', true);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/startup/db.js","const config = require('config');\n\nmodule.exports = function () {\n    if (!config.get('JWT_PRIVATE_KEY')) {\n        throw new Error('FATAL ERROR: JWT_PRIVATE_KEY is not defined!');\n    }\n    if (!config.get('MONGO_USERS')) {\n        throw new Error('FATAL ERROR: MONGO_USERS is not defined!');\n    }\n    if (!config.get('MONGO_LOGGING')) {\n        throw new Error('FATAL ERROR: MONGO_LOGGING is not defined!');\n    }\n    if (!config.get('API_SKILLS')) {\n        throw new Error('FATAL ERROR: API_SKILLS is not defined!');\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/startup/config.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;ACAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AArBA;AACA;AAsBA;AACA;AAEA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;;;;;;AC3DA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACfA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAxBA;;;;;;;;;;;;;;ACNA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;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","sourceRoot":""}